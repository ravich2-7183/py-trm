# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_gnuspeech', [dirname(__file__)])
        except ImportError:
            import _gnuspeech
            return _gnuspeech
        if fp is not None:
            try:
                _mod = imp.load_module('_gnuspeech', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _gnuspeech = swig_import_helper()
    del swig_import_helper
else:
    import _gnuspeech
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def new_double_array(*args):
  return _gnuspeech.new_double_array(*args)
new_double_array = _gnuspeech.new_double_array

def delete_double_array(*args):
  return _gnuspeech.delete_double_array(*args)
delete_double_array = _gnuspeech.delete_double_array

def double_array_getitem(*args):
  return _gnuspeech.double_array_getitem(*args)
double_array_getitem = _gnuspeech.double_array_getitem

def double_array_setitem(*args):
  return _gnuspeech.double_array_setitem(*args)
double_array_setitem = _gnuspeech.double_array_setitem

def parseInputFile(*args):
  return _gnuspeech.parseInputFile(*args)
parseInputFile = _gnuspeech.parseInputFile

def addInput(*args):
  return _gnuspeech.addInput(*args)
addInput = _gnuspeech.addInput

def glotPitchAt(*args):
  return _gnuspeech.glotPitchAt(*args)
glotPitchAt = _gnuspeech.glotPitchAt

def glotVolAt(*args):
  return _gnuspeech.glotVolAt(*args)
glotVolAt = _gnuspeech.glotVolAt

def radiiAt(*args):
  return _gnuspeech.radiiAt(*args)
radiiAt = _gnuspeech.radiiAt

def radiusAtRegion(*args):
  return _gnuspeech.radiusAtRegion(*args)
radiusAtRegion = _gnuspeech.radiusAtRegion

def velumAt(*args):
  return _gnuspeech.velumAt(*args)
velumAt = _gnuspeech.velumAt

def aspVolAt(*args):
  return _gnuspeech.aspVolAt(*args)
aspVolAt = _gnuspeech.aspVolAt

def fricVolAt(*args):
  return _gnuspeech.fricVolAt(*args)
fricVolAt = _gnuspeech.fricVolAt

def fricPosAt(*args):
  return _gnuspeech.fricPosAt(*args)
fricPosAt = _gnuspeech.fricPosAt

def fricCFAt(*args):
  return _gnuspeech.fricCFAt(*args)
fricCFAt = _gnuspeech.fricCFAt

def fricBWAt(*args):
  return _gnuspeech.fricBWAt(*args)
fricBWAt = _gnuspeech.fricBWAt

def printControlRateInputTable(*args):
  return _gnuspeech.printControlRateInputTable(*args)
printControlRateInputTable = _gnuspeech.printControlRateInputTable
AU_FILE_FORMAT = _gnuspeech.AU_FILE_FORMAT
AIFF_FILE_FORMAT = _gnuspeech.AIFF_FILE_FORMAT
WAVE_FILE_FORMAT = _gnuspeech.WAVE_FILE_FORMAT
OUTPUT_SCALE = _gnuspeech.OUTPUT_SCALE
RANGE_MAX = _gnuspeech.RANGE_MAX
BITS_PER_SAMPLE = _gnuspeech.BITS_PER_SAMPLE

def writeOutputToFile(*args):
  return _gnuspeech.writeOutputToFile(*args)
writeOutputToFile = _gnuspeech.writeOutputToFile

def convertIntToFloat80(*args):
  return _gnuspeech.convertIntToFloat80(*args)
convertIntToFloat80 = _gnuspeech.convertIntToFloat80

def writeAuFileHeader(*args):
  return _gnuspeech.writeAuFileHeader(*args)
writeAuFileHeader = _gnuspeech.writeAuFileHeader

def fwriteShortMsb(*args):
  return _gnuspeech.fwriteShortMsb(*args)
fwriteShortMsb = _gnuspeech.fwriteShortMsb
TRM_R1 = _gnuspeech.TRM_R1
TRM_R2 = _gnuspeech.TRM_R2
TRM_R3 = _gnuspeech.TRM_R3
TRM_R4 = _gnuspeech.TRM_R4
TRM_R5 = _gnuspeech.TRM_R5
TRM_R6 = _gnuspeech.TRM_R6
TRM_R7 = _gnuspeech.TRM_R7
TRM_R8 = _gnuspeech.TRM_R8
TOTAL_REGIONS = _gnuspeech.TOTAL_REGIONS
TRM_N1 = _gnuspeech.TRM_N1
TRM_VELUM = _gnuspeech.TRM_VELUM
TRM_N2 = _gnuspeech.TRM_N2
TRM_N3 = _gnuspeech.TRM_N3
TRM_N4 = _gnuspeech.TRM_N4
TRM_N5 = _gnuspeech.TRM_N5
TRM_N6 = _gnuspeech.TRM_N6
TOTAL_NASAL_SECTIONS = _gnuspeech.TOTAL_NASAL_SECTIONS
ZERO_CROSSINGS = _gnuspeech.ZERO_CROSSINGS
LP_CUTOFF = _gnuspeech.LP_CUTOFF
N_BITS = _gnuspeech.N_BITS
L_BITS = _gnuspeech.L_BITS
L_RANGE = _gnuspeech.L_RANGE
M_BITS = _gnuspeech.M_BITS
M_RANGE = _gnuspeech.M_RANGE
FRACTION_BITS = _gnuspeech.FRACTION_BITS
FRACTION_RANGE = _gnuspeech.FRACTION_RANGE
FILTER_LENGTH = _gnuspeech.FILTER_LENGTH
FILTER_LIMIT = _gnuspeech.FILTER_LIMIT
N_MASK = _gnuspeech.N_MASK
L_MASK = _gnuspeech.L_MASK
M_MASK = _gnuspeech.M_MASK
FRACTION_MASK = _gnuspeech.FRACTION_MASK
OUTPUT_SRATE_LOW = _gnuspeech.OUTPUT_SRATE_LOW
OUTPUT_SRATE_HIGH = _gnuspeech.OUTPUT_SRATE_HIGH
class TRMParameters(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    glotPitch = _swig_property(_gnuspeech.TRMParameters_glotPitch_get, _gnuspeech.TRMParameters_glotPitch_set)
    glotVol = _swig_property(_gnuspeech.TRMParameters_glotVol_get, _gnuspeech.TRMParameters_glotVol_set)
    aspVol = _swig_property(_gnuspeech.TRMParameters_aspVol_get, _gnuspeech.TRMParameters_aspVol_set)
    fricVol = _swig_property(_gnuspeech.TRMParameters_fricVol_get, _gnuspeech.TRMParameters_fricVol_set)
    fricPos = _swig_property(_gnuspeech.TRMParameters_fricPos_get, _gnuspeech.TRMParameters_fricPos_set)
    fricCF = _swig_property(_gnuspeech.TRMParameters_fricCF_get, _gnuspeech.TRMParameters_fricCF_set)
    fricBW = _swig_property(_gnuspeech.TRMParameters_fricBW_get, _gnuspeech.TRMParameters_fricBW_set)
    radius = _swig_property(_gnuspeech.TRMParameters_radius_get, _gnuspeech.TRMParameters_radius_set)
    velum = _swig_property(_gnuspeech.TRMParameters_velum_get, _gnuspeech.TRMParameters_velum_set)
    def __init__(self): 
        this = _gnuspeech.new_TRMParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMParameters
    __del__ = lambda self : None;
TRMParameters_swigregister = _gnuspeech.TRMParameters_swigregister
TRMParameters_swigregister(TRMParameters)

class INPUT(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    previous = _swig_property(_gnuspeech.INPUT_previous_get, _gnuspeech.INPUT_previous_set)
    next = _swig_property(_gnuspeech.INPUT_next_get, _gnuspeech.INPUT_next_set)
    parameters = _swig_property(_gnuspeech.INPUT_parameters_get, _gnuspeech.INPUT_parameters_set)
    def __init__(self): 
        this = _gnuspeech.new_INPUT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_INPUT
    __del__ = lambda self : None;
INPUT_swigregister = _gnuspeech.INPUT_swigregister
INPUT_swigregister(INPUT)

class TRMInputParameters(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    outputFileFormat = _swig_property(_gnuspeech.TRMInputParameters_outputFileFormat_get, _gnuspeech.TRMInputParameters_outputFileFormat_set)
    outputRate = _swig_property(_gnuspeech.TRMInputParameters_outputRate_get, _gnuspeech.TRMInputParameters_outputRate_set)
    controlRate = _swig_property(_gnuspeech.TRMInputParameters_controlRate_get, _gnuspeech.TRMInputParameters_controlRate_set)
    volume = _swig_property(_gnuspeech.TRMInputParameters_volume_get, _gnuspeech.TRMInputParameters_volume_set)
    channels = _swig_property(_gnuspeech.TRMInputParameters_channels_get, _gnuspeech.TRMInputParameters_channels_set)
    balance = _swig_property(_gnuspeech.TRMInputParameters_balance_get, _gnuspeech.TRMInputParameters_balance_set)
    waveform = _swig_property(_gnuspeech.TRMInputParameters_waveform_get, _gnuspeech.TRMInputParameters_waveform_set)
    tp = _swig_property(_gnuspeech.TRMInputParameters_tp_get, _gnuspeech.TRMInputParameters_tp_set)
    tnMin = _swig_property(_gnuspeech.TRMInputParameters_tnMin_get, _gnuspeech.TRMInputParameters_tnMin_set)
    tnMax = _swig_property(_gnuspeech.TRMInputParameters_tnMax_get, _gnuspeech.TRMInputParameters_tnMax_set)
    breathiness = _swig_property(_gnuspeech.TRMInputParameters_breathiness_get, _gnuspeech.TRMInputParameters_breathiness_set)
    length = _swig_property(_gnuspeech.TRMInputParameters_length_get, _gnuspeech.TRMInputParameters_length_set)
    temperature = _swig_property(_gnuspeech.TRMInputParameters_temperature_get, _gnuspeech.TRMInputParameters_temperature_set)
    lossFactor = _swig_property(_gnuspeech.TRMInputParameters_lossFactor_get, _gnuspeech.TRMInputParameters_lossFactor_set)
    apScale = _swig_property(_gnuspeech.TRMInputParameters_apScale_get, _gnuspeech.TRMInputParameters_apScale_set)
    mouthCoef = _swig_property(_gnuspeech.TRMInputParameters_mouthCoef_get, _gnuspeech.TRMInputParameters_mouthCoef_set)
    noseCoef = _swig_property(_gnuspeech.TRMInputParameters_noseCoef_get, _gnuspeech.TRMInputParameters_noseCoef_set)
    noseRadius = _swig_property(_gnuspeech.TRMInputParameters_noseRadius_get, _gnuspeech.TRMInputParameters_noseRadius_set)
    throatCutoff = _swig_property(_gnuspeech.TRMInputParameters_throatCutoff_get, _gnuspeech.TRMInputParameters_throatCutoff_set)
    throatVol = _swig_property(_gnuspeech.TRMInputParameters_throatVol_get, _gnuspeech.TRMInputParameters_throatVol_set)
    modulation = _swig_property(_gnuspeech.TRMInputParameters_modulation_get, _gnuspeech.TRMInputParameters_modulation_set)
    mixOffset = _swig_property(_gnuspeech.TRMInputParameters_mixOffset_get, _gnuspeech.TRMInputParameters_mixOffset_set)
    def __init__(self): 
        this = _gnuspeech.new_TRMInputParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMInputParameters
    __del__ = lambda self : None;
TRMInputParameters_swigregister = _gnuspeech.TRMInputParameters_swigregister
TRMInputParameters_swigregister(TRMInputParameters)

class TRMData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    inputParameters = _swig_property(_gnuspeech.TRMData_inputParameters_get, _gnuspeech.TRMData_inputParameters_set)
    inputHead = _swig_property(_gnuspeech.TRMData_inputHead_get, _gnuspeech.TRMData_inputHead_set)
    inputTail = _swig_property(_gnuspeech.TRMData_inputTail_get, _gnuspeech.TRMData_inputTail_set)
    def __init__(self): 
        this = _gnuspeech.new_TRMData()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMData
    __del__ = lambda self : None;
TRMData_swigregister = _gnuspeech.TRMData_swigregister
TRMData_swigregister(TRMData)

class TRMSampleRateConverter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    sampleRateRatio = _swig_property(_gnuspeech.TRMSampleRateConverter_sampleRateRatio_get, _gnuspeech.TRMSampleRateConverter_sampleRateRatio_set)
    h = _swig_property(_gnuspeech.TRMSampleRateConverter_h_get, _gnuspeech.TRMSampleRateConverter_h_set)
    deltaH = _swig_property(_gnuspeech.TRMSampleRateConverter_deltaH_get, _gnuspeech.TRMSampleRateConverter_deltaH_set)
    timeRegisterIncrement = _swig_property(_gnuspeech.TRMSampleRateConverter_timeRegisterIncrement_get, _gnuspeech.TRMSampleRateConverter_timeRegisterIncrement_set)
    filterIncrement = _swig_property(_gnuspeech.TRMSampleRateConverter_filterIncrement_get, _gnuspeech.TRMSampleRateConverter_filterIncrement_set)
    phaseIncrement = _swig_property(_gnuspeech.TRMSampleRateConverter_phaseIncrement_get, _gnuspeech.TRMSampleRateConverter_phaseIncrement_set)
    timeRegister = _swig_property(_gnuspeech.TRMSampleRateConverter_timeRegister_get, _gnuspeech.TRMSampleRateConverter_timeRegister_set)
    maximumSampleValue = _swig_property(_gnuspeech.TRMSampleRateConverter_maximumSampleValue_get, _gnuspeech.TRMSampleRateConverter_maximumSampleValue_set)
    numberSamples = _swig_property(_gnuspeech.TRMSampleRateConverter_numberSamples_get, _gnuspeech.TRMSampleRateConverter_numberSamples_set)
    tempFilePtr = _swig_property(_gnuspeech.TRMSampleRateConverter_tempFilePtr_get, _gnuspeech.TRMSampleRateConverter_tempFilePtr_set)
    def __init__(self): 
        this = _gnuspeech.new_TRMSampleRateConverter()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMSampleRateConverter
    __del__ = lambda self : None;
TRMSampleRateConverter_swigregister = _gnuspeech.TRMSampleRateConverter_swigregister
TRMSampleRateConverter_swigregister(TRMSampleRateConverter)

C1 = _gnuspeech.C1
C2 = _gnuspeech.C2
C3 = _gnuspeech.C3
C4 = _gnuspeech.C4
C5 = _gnuspeech.C5
C6 = _gnuspeech.C6
C7 = _gnuspeech.C7
C8 = _gnuspeech.C8
TOTAL_COEFFICIENTS = _gnuspeech.TOTAL_COEFFICIENTS
S1 = _gnuspeech.S1
S2 = _gnuspeech.S2
S3 = _gnuspeech.S3
S4 = _gnuspeech.S4
S5 = _gnuspeech.S5
S6 = _gnuspeech.S6
S7 = _gnuspeech.S7
S8 = _gnuspeech.S8
S9 = _gnuspeech.S9
S10 = _gnuspeech.S10
TOTAL_SECTIONS = _gnuspeech.TOTAL_SECTIONS
NC1 = _gnuspeech.NC1
NC2 = _gnuspeech.NC2
NC3 = _gnuspeech.NC3
NC4 = _gnuspeech.NC4
NC5 = _gnuspeech.NC5
NC6 = _gnuspeech.NC6
TOTAL_NASAL_COEFFICIENTS = _gnuspeech.TOTAL_NASAL_COEFFICIENTS
LEFT = _gnuspeech.LEFT
RIGHT = _gnuspeech.RIGHT
UPPER = _gnuspeech.UPPER
TOTAL_ALPHA_COEFFICIENTS = _gnuspeech.TOTAL_ALPHA_COEFFICIENTS
FC1 = _gnuspeech.FC1
FC2 = _gnuspeech.FC2
FC3 = _gnuspeech.FC3
FC4 = _gnuspeech.FC4
FC5 = _gnuspeech.FC5
FC6 = _gnuspeech.FC6
FC7 = _gnuspeech.FC7
FC8 = _gnuspeech.FC8
TOTAL_FRIC_COEFFICIENTS = _gnuspeech.TOTAL_FRIC_COEFFICIENTS
VT_SCALE = _gnuspeech.VT_SCALE
TOP = _gnuspeech.TOP
BOTTOM = _gnuspeech.BOTTOM
class TRMTubeModel(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    controlPeriod = _swig_property(_gnuspeech.TRMTubeModel_controlPeriod_get, _gnuspeech.TRMTubeModel_controlPeriod_set)
    sampleRate = _swig_property(_gnuspeech.TRMTubeModel_sampleRate_get, _gnuspeech.TRMTubeModel_sampleRate_set)
    actualTubeLength = _swig_property(_gnuspeech.TRMTubeModel_actualTubeLength_get, _gnuspeech.TRMTubeModel_actualTubeLength_set)
    dampingFactor = _swig_property(_gnuspeech.TRMTubeModel_dampingFactor_get, _gnuspeech.TRMTubeModel_dampingFactor_set)
    crossmixFactor = _swig_property(_gnuspeech.TRMTubeModel_crossmixFactor_get, _gnuspeech.TRMTubeModel_crossmixFactor_set)
    breathinessFactor = _swig_property(_gnuspeech.TRMTubeModel_breathinessFactor_get, _gnuspeech.TRMTubeModel_breathinessFactor_set)
    a10 = _swig_property(_gnuspeech.TRMTubeModel_a10_get, _gnuspeech.TRMTubeModel_a10_set)
    b11 = _swig_property(_gnuspeech.TRMTubeModel_b11_get, _gnuspeech.TRMTubeModel_b11_set)
    a20 = _swig_property(_gnuspeech.TRMTubeModel_a20_get, _gnuspeech.TRMTubeModel_a20_set)
    a21 = _swig_property(_gnuspeech.TRMTubeModel_a21_get, _gnuspeech.TRMTubeModel_a21_set)
    b21 = _swig_property(_gnuspeech.TRMTubeModel_b21_get, _gnuspeech.TRMTubeModel_b21_set)
    na10 = _swig_property(_gnuspeech.TRMTubeModel_na10_get, _gnuspeech.TRMTubeModel_na10_set)
    nb11 = _swig_property(_gnuspeech.TRMTubeModel_nb11_get, _gnuspeech.TRMTubeModel_nb11_set)
    na20 = _swig_property(_gnuspeech.TRMTubeModel_na20_get, _gnuspeech.TRMTubeModel_na20_set)
    na21 = _swig_property(_gnuspeech.TRMTubeModel_na21_get, _gnuspeech.TRMTubeModel_na21_set)
    nb21 = _swig_property(_gnuspeech.TRMTubeModel_nb21_get, _gnuspeech.TRMTubeModel_nb21_set)
    tb1 = _swig_property(_gnuspeech.TRMTubeModel_tb1_get, _gnuspeech.TRMTubeModel_tb1_set)
    ta0 = _swig_property(_gnuspeech.TRMTubeModel_ta0_get, _gnuspeech.TRMTubeModel_ta0_set)
    throatGain = _swig_property(_gnuspeech.TRMTubeModel_throatGain_get, _gnuspeech.TRMTubeModel_throatGain_set)
    bpAlpha = _swig_property(_gnuspeech.TRMTubeModel_bpAlpha_get, _gnuspeech.TRMTubeModel_bpAlpha_set)
    bpBeta = _swig_property(_gnuspeech.TRMTubeModel_bpBeta_get, _gnuspeech.TRMTubeModel_bpBeta_set)
    bpGamma = _swig_property(_gnuspeech.TRMTubeModel_bpGamma_get, _gnuspeech.TRMTubeModel_bpGamma_set)
    oropharynx = _swig_property(_gnuspeech.TRMTubeModel_oropharynx_get, _gnuspeech.TRMTubeModel_oropharynx_set)
    oropharynx_coeff = _swig_property(_gnuspeech.TRMTubeModel_oropharynx_coeff_get, _gnuspeech.TRMTubeModel_oropharynx_coeff_set)
    nasal = _swig_property(_gnuspeech.TRMTubeModel_nasal_get, _gnuspeech.TRMTubeModel_nasal_set)
    nasal_coeff = _swig_property(_gnuspeech.TRMTubeModel_nasal_coeff_get, _gnuspeech.TRMTubeModel_nasal_coeff_set)
    alpha = _swig_property(_gnuspeech.TRMTubeModel_alpha_get, _gnuspeech.TRMTubeModel_alpha_set)
    current_ptr = _swig_property(_gnuspeech.TRMTubeModel_current_ptr_get, _gnuspeech.TRMTubeModel_current_ptr_set)
    prev_ptr = _swig_property(_gnuspeech.TRMTubeModel_prev_ptr_get, _gnuspeech.TRMTubeModel_prev_ptr_set)
    fricationTap = _swig_property(_gnuspeech.TRMTubeModel_fricationTap_get, _gnuspeech.TRMTubeModel_fricationTap_set)
    sampleRateConverter = _swig_property(_gnuspeech.TRMTubeModel_sampleRateConverter_get, _gnuspeech.TRMTubeModel_sampleRateConverter_set)
    ringBuffer = _swig_property(_gnuspeech.TRMTubeModel_ringBuffer_get, _gnuspeech.TRMTubeModel_ringBuffer_set)
    wavetable = _swig_property(_gnuspeech.TRMTubeModel_wavetable_get, _gnuspeech.TRMTubeModel_wavetable_set)
    current = _swig_property(_gnuspeech.TRMTubeModel_current_get)
    def __init__(self): 
        this = _gnuspeech.new_TRMTubeModel()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMTubeModel
    __del__ = lambda self : None;
TRMTubeModel_swigregister = _gnuspeech.TRMTubeModel_swigregister
TRMTubeModel_swigregister(TRMTubeModel)

class TRMTubeModel_current(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    parameters = _swig_property(_gnuspeech.TRMTubeModel_current_parameters_get, _gnuspeech.TRMTubeModel_current_parameters_set)
    delta = _swig_property(_gnuspeech.TRMTubeModel_current_delta_get, _gnuspeech.TRMTubeModel_current_delta_set)
    def __init__(self): 
        this = _gnuspeech.new_TRMTubeModel_current()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gnuspeech.delete_TRMTubeModel_current
    __del__ = lambda self : None;
TRMTubeModel_current_swigregister = _gnuspeech.TRMTubeModel_current_swigregister
TRMTubeModel_current_swigregister(TRMTubeModel_current)

ERROR = _gnuspeech.ERROR
SUCCESS = _gnuspeech.SUCCESS
PULSE = _gnuspeech.PULSE
SINE = _gnuspeech.SINE
PI = _gnuspeech.PI
TWO_PI = _gnuspeech.TWO_PI

def TRMTubeModelCreate(*args):
  return _gnuspeech.TRMTubeModelCreate(*args)
TRMTubeModelCreate = _gnuspeech.TRMTubeModelCreate

def TRMTubeModelFree(*args):
  return _gnuspeech.TRMTubeModelFree(*args)
TRMTubeModelFree = _gnuspeech.TRMTubeModelFree

def synthesize(*args):
  return _gnuspeech.synthesize(*args)
synthesize = _gnuspeech.synthesize

cvar = _gnuspeech.cvar

